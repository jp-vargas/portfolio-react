@import "./functions/maps";

// Table of Contents:
//
// 1. Globals
// 2. Colors
// 3. Typography
// 4. Font Scaling

// 1. Globals
// ------
$class-prefix: 'pds' !default;

// EMpty maps for merging
$grid-margins: () !default;
$grid-column-gaps: () !default;
$grid-breakpoints: (
  'small':  ( min-width:  767px ),
  'medium': ( min-width:  992px ),
  'large':  ( min-width: 1200px )
) !default;

// 2. Colors
// ------
$base-background-color: white !default;
$base-font-color: gray !default;
$base-link-color: red !default;
$color-daniela: cyan !default;
$menu-background-color: rgba(gray, 0.8);

// 3. Typography
// ------
$base-font-size: 100% !default; // 16px on all browsers
$base-line-height: 1.5 !default;
$base-font-weight: 400 !default;
$base-font-family: 'Helvetica Neue', helvetica, arial, sans-serif !default;
$brand-font-regular: 'Haas Grotesk Text Regular', $base-font-family !default;
$brand-font-medium: 'Haas Grotesk Text Medium', $base-font-family !default;
$brand-font-bold: 'Haas Grotesk Text Bold', $base-font-family !default;

// 4. Font Scaling
$display-line-height: 1.25 !default;

$base-font-sizes: (
  87.5%,   //14px
  100%,    //16px
  112.5%   //18px
) !default;

$font-scale: (
  12px,
  14px,
  16px,
  18px,
  20px,
  24px,
  28px,
  32px,
  36px,
  42px,
  48px,
  54px,
  60px,
  68px,
  76px,
  84px,
  92px
) !default;

$font-scale-breakpoints: (
  0,          // Mobile first
  22.500em,   // 460px
  47.999em    // 768px
) !default;

// 5. Elevations

$elevation1: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
$elevation2: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
$elevation3: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
$elevation4: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
$elevation5: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
$elevation6: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);


// 6. Mixins

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint, $breakpoints: $grid-breakpoints) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}